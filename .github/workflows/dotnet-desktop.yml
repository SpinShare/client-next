name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'SpinShareClient/**'

jobs:
  build:
    name: build-${{ matrix.os }}
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - name: Restore NuGet packages
        run: dotnet restore
      - name: Run tests
        run: dotnet test --no-restore --verbosity normal
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Publish
        run: |
          mkdir -p publish/${{ matrix.os }}
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            dotnet publish --configuration Release --runtime win-x64 --output publish/${{ matrix.os }} /p:PublishSingleFile=true
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            dotnet publish --configuration Release --runtime osx-x64 --output publish/${{ matrix.os }} /p:PublishSingleFile=true
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            dotnet publish --configuration Release --runtime linux-x64 --output publish/${{ matrix.os }} /p:PublishSingleFile=true
          fi
        shell: bash
      - name: List Files
        run: |
          ls -lp publish/
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-artifact
          path: publish/${{ matrix.os }}/*
  release:
    needs: build
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Release Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: List Files
        run: |
          ls -lp artifacts/
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          name: Release ${{ github.event.repository.updated_at }}
          draft: true
          prerelease: true
    